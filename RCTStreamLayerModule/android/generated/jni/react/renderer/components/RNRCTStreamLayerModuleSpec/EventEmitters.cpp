
/**
 * This code was generated by [react-native-codegen](https://www.npmjs.com/package/react-native-codegen).
 *
 * Do not edit this file as changes may cause incorrect behavior and will be lost
 * once the code is regenerated.
 *
 * @generated by codegen project: GenerateEventEmitterCpp.js
 */

#include "EventEmitters.h"


namespace facebook::react {

void RCTStreamLayerModuleViewEventEmitter::onRequestStream(OnRequestStream $event) const {
  dispatchEvent("requestStream", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "id", $event.id);
    return $payload;
  });
}


void RCTStreamLayerModuleViewEventEmitter::onRequestAudioDucking(OnRequestAudioDucking $event) const {
  dispatchEvent("requestAudioDucking", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "level", $event.level);
    return $payload;
  });
}


void RCTStreamLayerModuleViewEventEmitter::onLBarStateChanged(OnLBarStateChanged $event) const {
  dispatchEvent("lBarStateChanged", [$event=std::move($event)](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    $payload.setProperty(runtime, "slideX", $event.slideX);
$payload.setProperty(runtime, "slideY", $event.slideY);
    return $payload;
  });
}


void RCTStreamLayerModuleViewEventEmitter::onDisableAudioDucking(OnDisableAudioDucking $event) const {
  dispatchEvent("disableAudioDucking", [](jsi::Runtime &runtime) {
    auto $payload = jsi::Object(runtime);
    
    return $payload;
  });
}

} // namespace facebook::react
